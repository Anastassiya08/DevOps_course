---
# tasks file for hello_webservice
- name: "Load config"
  ansible.builtin.include_vars:
    file: "configuration.yml"

- name: "Install required packages"
  apt:
    pkg:
      - nginx
      - python3
      - python-virtualenv
    state: "present"
    update_cache: "yes"

- name: "Create service user"
  ansible.builtin.user:
    name: "{{ app_run_as_user }}"
    home: "{{ app_root_path }}"
    system: yes
    create_home: "yes"

- name: "Save the app folder"
  ansible.builtin.copy:
    src: "app/"
    dest: "{{ app_root_path }}"
    mode: "0644"

- name: "Install python dependencies"
  ansible.builtin.pip:
    requirements: "{{ requirements_path }}"
    virtualenv: "{{ app_virtualenv_path }}"
    virtualenv_python: "python3"

- name: "Configure service"
  ansible.builtin.template:
    src: "example_app.service.jinja2"
    dest: "/etc/systemd/system/{{ app_service_name }}.service"
    owner: root
    group: root
    mode: '0644'

- name: "Enable webapp service"
  ansible.builtin.systemd:
    name: "{{ app_service_name }}"
    state: started
    daemon_reload: yes
    enabled: yes
  notify:
   - "Restart webapp"

- name: "Configure NGINX"
  ansible.builtin.template:
    src: "nginx.conf.jinja2"
    dest: "/etc/nginx/sites-available/{{ app_service_name }}"
    owner: root
    group: root
    mode: '0644'
  notify:
   - "Reload nginx"

- name: "Disable nginx default site"
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/default"
    state: "absent"
  notify:
   - "Reload nginx"

- name: "Enable nginx web app site"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ app_service_name }}"
    dest: "/etc/nginx/sites-enabled/{{ app_service_name }}"
    owner: root
    group: root
    state: link
  notify:
   - "Reload nginx"

